public class TicketMachine
{
    private int price;
    private int balance;
    private int total;
    private boolean givesPrizes;
    private int ticketsSold;
    private int maxTickets;

    public TicketMachine(int cost, boolean givesPrizes, int maxTickets)
    {
        price = cost;
        balance = 0;
        total = 0;
        this.givesPrizes = givesPrizes;
        this.ticketsSold = 0;
        this.maxTickets = maxTickets;
    }

    public int getPrice()
    {
        return price;
    }

    public int getBalance()
    {
        return balance;
    }

    public void insertMoney(int amount)
    {
        if(amount > 0) {
            balance += amount;
        }
        else {
            System.out.println("Use a positive amount rather than: " + amount);
        }
    }

    public void printTicket()
    {
        if (ticketsSold < maxTickets) {
            if(balance >= price) {
                System.out.println("##################");
                System.out.println("# The BlueJ Line");
                System.out.println("# Ticket");
                System.out.println("# " + price + " cents.");
                System.out.println("##################");
                System.out.println();

                total += price;
                balance -= price;
                
                ticketsSold++;
                
                if (givesPrizes) {
                    System.out.println("##################");
                    System.out.println("# The BlueJ Line");
                    System.out.println("# Prize Ticket");
                    System.out.println("##################");
                    System.out.println();
                }
                  
            }
            else {
                int amountLeftToPay = price - balance;
                System.out.println("You must insert at least: " + amountLeftToPay + " more cents.");        
            }
        }
        else {
            System.out.println("All available tickets have been sold.");
        }
    }

    public int refundBalance()
    {
        int amountToRefund = balance;
        balance = 0;
        return amountToRefund;
    }
    
    public int emptyMachine()
    {
        if (balance > 0) {
            return -1;
        }
        else {
            int oldTotal = total;
            total = 0;
            return oldTotal;            
        }
    }
}
